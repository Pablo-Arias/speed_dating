smile                           <-as.numeric(data$smile)
frame                           <- as.factor(data$frame)
file_name                       <- as.factor(data$file_name)
manipulated                     <- as.factor(data$manipulated)
file_tag                        <- as.factor(data$file_tag)
participant_nb                  <- as.factor(data$participant_nb)
interacting_partner             <- as.factor(data$interacting_partner)
N                               <- as.factor(data$N)
day                             <- as.factor(data$day)
female_condition                <- as.factor(data$female_condition)
female_video                    <- as.factor(data$female_video)
individual_date                 <- as.factor(data$individual_date)
male_condition                  <- as.factor(data$male_condition)
male_video                      <- as.factor(data$male_video)
sex                             <- as.factor(data$sex)
other_sex                       <- as.factor(data$other_sex)
participant_condition           <- as.factor(data$participant_condition)
other_condition                 <- as.factor(data$other_condition)
participant_video               <- as.factor(data$participant_video)
other_video                     <- as.factor(data$other_video)
dyad                            <- as.factor(data$dyad)
clean_data <- data.frame(frame, file_name, manipulated, file_tag, participant_nb
, interacting_partner, N, day, female_condition
, female_video, individual_date, male_condition
, male_video, sex, other_sex
, participant_condition, other_condition, participant_video, other_video, dyad
, smile
)
head(clean_data)
##--------------------------------------------------------
## --------------- PAPER PLOT ---------------------
##--------------------------------------------------------
## Box plot
# Create the box plot
# Rename the levels of "participant_condition" variable
reduced_df = clean_data %>%
group_by(participant_nb, participant_condition, sex, manipulated) %>%
summarise_at(c("smile"), mean, na.rm = TRUE)
#rename variables
reduced_df$participant_condition <- factor(reduced_df$participant_condition, levels = c("S", "U"), labels = c("increase", "decrease"))
reduced_df$sex <- factor(reduced_df$sex, levels = c("F", "M"), labels = c("Female data", "Male data"))
# Create a new variable to store the box colors based on conditions
reduced_df$box_color <- with(reduced_df, ifelse(interaction(manipulated, participant_condition) == "TRUE.decrease", "red",
ifelse(interaction(manipulated, participant_condition) == "TRUE.increase", "blue", "black")))
# Convert the box_color variable to a factor with appropriate levels
reduced_df$box_color <- factor(reduced_df$box_color, levels = c("black", "red", "blue"))
ggplot(reduced_df, aes(x = participant_condition, y = smile, fill = box_color)) +
geom_boxplot(outlier.shape = NA, position = position_dodge(width = 0.8), color = "darkgray", alpha = 0.8) +
geom_jitter(aes(color = box_color), alpha = 0.7, position = position_jitterdodge()) +
facet_grid(. ~ sex, scales = "free_x", space = "free_x") +
labs(x = "Participant Manipulation", y = "Smiling Activity (a.u.)", fill = "",
color = "") +  # Remove fill and color labels
scale_fill_manual(values = c("black","#3399FF", "#FF3333")) + # Deeper red and blue shades for boxes
scale_color_manual(values = c("black", "#336699", "#993333")) + # Darker shades for dots
theme_minimal() +
theme(
text = element_text(size = 15, color = "black"),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12, color="black"),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
legend.position = "none",
) +
ylim(0.2, 0.95)
ggsave("plots/manipulation_check.pdf", width = 14, height = 10, units = "cm")
cat("\f")
rm(list=ls())
# Init
graphics.off()
library("MASS")
library(afex)
library(phia)
library(doBy)
library(effsize)
library(lmerTest);
library(dplyr);
library("sjPlot")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
cat("\f")
rm(list=ls())
# Init
graphics.off()
library("MASS")
library(afex)
library(phia)
library(doBy)
library(effsize)
library(lmerTest);
library(dplyr);
library("sjPlot")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Choose what data to import and condition to analyse
file_name = "data/mi_df_py_feat_happiness.csv"
#read data
data = read.table(file_name, header=TRUE,sep=',')
head(data)
#defining outcomes
mi			          <-as.numeric(data$mi)
mean_corr			    <-as.numeric(data$mean_corr)
max_corr			    <-as.numeric(data$max_corr)
#defining predictors (categorical)
male_condition 	     <- as.factor(data$male_condition)
male_condition       <- relevel(male_condition, "U")
female_condition 		 <- as.factor(data$female_condition)
female_condition     <- relevel(female_condition, "U")
participant_nb			 <- as.factor(data$participant_nb)
interacting_partner	 <- as.factor(data$interacting_partner)
dyad		             <- as.factor(data$dyad)
sex		               <- as.factor(data$sex)
participant_nb		   <- as.factor(data$participant_nb)
other_manipulated		            <- as.factor(data$other_manipulated)
participant_manipulated		      <- as.factor(data$participant_manipulated)
male_id		          <- as.factor(data$male_id)
female_id		        <- as.factor(data$female_id)
u_cond		         <- paste(data$female_condition, data$male_condition)
clean_data=data.frame( female_id, male_id, male_condition, female_condition, dyad, sex, participant_manipulated, other_manipulated,  u_cond, mi, mean_corr, max_corr )
head(clean_data)
# Keep only what participants see and what they produce
clean_data = clean_data[clean_data$participant_manipulated=="False",]
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "mean_corr", "max_corr"), mean, na.rm = TRUE)
#First level
nul<- lmer( mi ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( mi ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( mi ~ other_manipulated    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
aov.out = anova(nul,v2)
aov.out
#Second level
nul<- lmer( mi ~ male_condition            	            + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition + female_condition      + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul<- lmer( mi ~ female_condition            	          + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ female_condition + male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul<- lmer( mi ~ 1
#First level
nul<- lmer( mi ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
#First level
nul<- lmer( mi ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( mi ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( mi ~ other_manipulated    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
aov.out = anova(nul,v2)
aov.out
#Second level
nul<- lmer( mi ~ male_condition            	            + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition + female_condition      + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul<- lmer( mi ~ female_condition            	          + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ female_condition + male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
#Second level
nul<- lmer( mi ~ male_condition            	            + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition + female_condition      + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul<- lmer( mi ~ female_condition            	          + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ female_condition + male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul <- lmer( mi  ~ female_condition + male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ female_condition * male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul <- lmer( mi  ~ male_condition+other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ male_condition*other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul <- lmer( mi  ~ female_condition+other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ female_condition*other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
#Triple interactions
nul <- lmer( mi  ~ female_condition+other_manipulated                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ male_condition*female_condition*other_manipulated   + (1 | male_id) + (1 | female_id), data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
# --> No interactions
# best fit model includes : female_condition + male_condition
bm <- lmer( mi  ~ female_condition + male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("male_condition", "female_condition") )
summary(bm)
library(emmeans)
em <- emmeans(bm, pairwise ~ female_condition*male_condition, adjust = "sidak", type="response")
em
eff_size(em, sigma = sigma(bm), edf = df.residual(bm))
##
## Comparison between congruent condition
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "mean_corr", "max_corr"), mean, na.rm = TRUE)
#keep good conditions
reduced_df <- reduced_df[reduced_df$u_cond != "U S",]
reduced_df <- reduced_df[reduced_df$u_cond!="S U",]
head(reduced_df)
nul <- lmer( mi  ~ 1                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ u_cond             + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v1  <- lmer( mi  ~ other_manipulated  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
#Analysis for only congruent conditions
reduced_df <- reduced_df[reduced_df$u_cond != "U S",]
reduced_df <- reduced_df[reduced_df$u_cond!="S U",]
head(reduced_df)
nul <- lmer( mi  ~ 1                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ u_cond             + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v1  <- lmer( mi  ~ other_manipulated  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
# best model
bm <- lmer( mi  ~ u_cond  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("u_cond") )
summary(bm)
#First level
nul<- lmer( max_corr ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( max_corr ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( max_corr ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( max_corr ~ other_manipulated   + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
aov.out = anova(nul,v2)
aov.out
#Check interactions
nul <- lmer( max_corr  ~ female_condition + male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( max_corr  ~ female_condition * male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
bm <- lmer( max_corr  ~ female_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("male_condition", "female_condition") )
summary(bm)
bm <- lmer( max_corr  ~ female_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("male_condition", "female_condition") )
summary(bm)
#First level
nul<- lmer( max_corr ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( max_corr ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( max_corr ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( max_corr ~ other_manipulated   + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
aov.out = anova(nul,v2)
aov.out
bm <- lmer( max_corr  ~ female_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("male_condition", "female_condition") )
summary(bm)
plot_model( bm, type = "pred", terms = c("male_condition", "female_condition") )
#Check interactions
nul <- lmer( max_corr  ~ female_condition + male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( max_corr  ~ female_condition * male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
##
## Comparison between congruent condition
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "mean_corr", "max_corr"), mean, na.rm = TRUE)
#keep good conditions
reduced_df = reduced_df[reduced_df$participant_manipulated=="False",]
reduced_df <- reduced_df[reduced_df$u_cond != "U S",]
reduced_df <- reduced_df[reduced_df$u_cond!="S U",]
head(reduced_df)
nul <- lmer( max_corr  ~ 1                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( max_corr  ~ u_cond             + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v1  <- lmer( max_corr  ~ other_manipulated  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
# best model
bm <- lmer( max_corr  ~ u_cond  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("u_cond") )
summary(bm)
cat("\f")
rm(list=ls())
# Init
graphics.off()
library("MASS")
library(afex)
library(phia)
library(doBy)
library(effsize)
library(lmerTest);
library(dplyr);
library("sjPlot")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Choose what data to import and condition to analyse
file_name = "data/mi_df_py_feat_happiness_all_manipulated_pairs.csv"
#read data
data = read.table(file_name, header=TRUE,sep=',')
head(data)
#defining outcomes
mi			          <-as.numeric(data$mi)
mean_corr			    <-as.numeric(data$mean_corr)
max_corr			    <-as.numeric(data$max_corr)
#defining predictors (categorical)
male_condition 	     <- as.factor(data$male_condition)
male_condition       <- relevel(male_condition, "U")
female_condition 		 <- as.factor(data$female_condition)
female_condition     <- relevel(female_condition, "U")
participant_nb			 <- as.factor(data$participant_nb)
interacting_partner	 <- as.factor(data$interacting_partner)
dyad		             <- as.factor(data$dyad)
sex		               <- as.factor(data$sex)
participant_nb		   <- as.factor(data$participant_nb)
other_manipulated		            <- as.factor(data$other_manipulated)
participant_manipulated		      <- as.factor(data$participant_manipulated)
male_id		          <- as.factor(data$male_id)
female_id		        <- as.factor(data$female_id)
u_cond		         <- paste(data$female_condition, data$male_condition)
clean_data=data.frame( female_id, male_id, male_condition, female_condition, dyad, sex, participant_manipulated, other_manipulated,  u_cond, mi, mean_corr, max_corr )
head(clean_data)
cat("\f")
rm(list=ls())
# Init
graphics.off()
library("MASS")
library(afex)
library(phia)
library(doBy)
library(effsize)
library(lmerTest);
library(dplyr);
library("sjPlot")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Choose what data to import and condition to analyse
file_name = "data/mi_df_py_feat_happiness_all_manipulated_pairs.csv"
#read data
data = read.table(file_name, header=TRUE,sep=',')
head(data)
#defining outcomes
mi			          <-as.numeric(data$mi)
mean_corr			    <-as.numeric(data$mean_corr)
max_corr			    <-as.numeric(data$max_corr)
#defining predictors (categorical)
male_condition 	     <- as.factor(data$male_condition)
male_condition       <- relevel(male_condition, "U")
female_condition 		 <- as.factor(data$female_condition)
female_condition     <- relevel(female_condition, "U")
participant_nb			 <- as.factor(data$participant_nb)
interacting_partner	 <- as.factor(data$interacting_partner)
dyad		             <- as.factor(data$dyad)
sex		               <- as.factor(data$sex)
participant_nb		   <- as.factor(data$participant_nb)
other_manipulated		            <- as.factor(data$other_manipulated)
participant_manipulated		      <- as.factor(data$participant_manipulated)
male_id		          <- as.factor(data$male_id)
female_id		        <- as.factor(data$female_id)
u_cond		         <- paste(data$female_condition, data$male_condition)
clean_data=data.frame( female_id, male_id, male_condition, female_condition, dyad, sex, participant_manipulated, other_manipulated,  u_cond, mi, mean_corr, max_corr )
head(clean_data)
male_condition
male_condition
female_condition
female_condition
participant_nb
interacting_partner
dyad
sex
participant_nb
other_manipulated
participant_manipulated
male_id
female_id
u_cond
clean_data=data.frame( female_id, male_id, male_condition, female_condition, dyad, sex, participant_manipulated, other_manipulated,  u_cond, mi, mean_corr, max_corr )
male_condition
male_condition
female_condition
dyad
male_id
female_id
male_condition
female_condition
other_manipulated
participant_manipulated
u_cond
clean_data=data.frame( female_id, male_id, male_condition, female_condition, dyad, sex, participant_manipulated, other_manipulated,  u_cond, mi, max_corr )
head(clean_data)
# Keep only what participants see and what they produce
clean_data = clean_data[clean_data$participant_manipulated=="False",]
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "mean_corr", "max_corr"), mean, na.rm = TRUE)
#First level
nul<- lmer( mi ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( mi ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( mi ~ other_manipulated   + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "max_corr"), mean, na.rm = TRUE)
#First level
nul<- lmer( mi ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( mi ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( mi ~ other_manipulated   + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
aov.out = anova(nul,v2)
aov.out
#Second level
nul<- lmer( mi ~ male_condition            	            + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ male_condition + female_condition      + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul<- lmer( mi ~ female_condition            	          + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( mi ~ female_condition + male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul <- lmer( mi  ~ female_condition + male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ female_condition * male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul <- lmer( mi  ~ male_condition+other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ male_condition*other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
nul <- lmer( mi  ~ female_condition+other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ female_condition*other_manipulated   + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
#Triple interactions
nul <- lmer( mi  ~ female_condition+other_manipulated                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ male_condition*female_condition*other_manipulated   + (1 | male_id) + (1 | female_id), data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
# --> No interactions
# best fit model includes : female_condition + male_condition
bm <- lmer( mi  ~ female_condition + male_condition  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("male_condition", "female_condition") )
summary(bm)
##
## Comparison between congruent condition
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "mean_corr", "max_corr"), mean, na.rm = TRUE)
#Analysis for only congruent conditions
reduced_df <- reduced_df[reduced_df$u_cond != "U S",]
reduced_df <- reduced_df[reduced_df$u_cond!="S U",]
head(reduced_df)
nul <- lmer( mi  ~ 1                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( mi  ~ u_cond             + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v1  <- lmer( mi  ~ other_manipulated  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
# best model
bm <- lmer( mi  ~ u_cond  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("u_cond") )
summary(bm)
# best model
bm <- lmer( mi  ~ u_cond  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("u_cond") )
summary(bm)
#First level
nul<- lmer( max_corr ~ 1            	     + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v0 <- lmer( max_corr ~ male_condition      + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v1 <- lmer( max_corr ~ female_condition    + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
v2 <- lmer( max_corr ~ other_manipulated   + (1 | male_id)+ (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
aov.out = anova(nul,v2)
aov.out
##
## Comparison between congruent condition
reduced_df = clean_data %>%
group_by(dyad, male_id, female_id, male_condition, female_condition, other_manipulated, participant_manipulated, u_cond) %>%
summarise_at(c("mi", "mean_corr", "max_corr"), mean, na.rm = TRUE)
#keep good conditions
reduced_df = reduced_df[reduced_df$participant_manipulated=="False",]
reduced_df <- reduced_df[reduced_df$u_cond != "U S",]
reduced_df <- reduced_df[reduced_df$u_cond!="S U",]
head(reduced_df)
nul <- lmer( max_corr  ~ 1                  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v0  <- lmer( max_corr  ~ u_cond             + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
v1  <- lmer( max_corr  ~ other_manipulated  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
aov.out = anova(nul,v0)
aov.out
aov.out = anova(nul,v1)
aov.out
# best model
bm <- lmer( max_corr  ~ u_cond  + (1 | male_id) + (1 | female_id) , data= reduced_df, REML = FALSE )
plot_model( bm, type = "pred", terms = c("u_cond") )
summary(bm)
